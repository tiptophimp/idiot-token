name: ci
on:
  push: { branches: [main] }
  pull_request:
  workflow_dispatch:
permissions:
  contents: read
  pull-requests: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash
env:
  ACTIONS_RUNTIME_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build-test-verify:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    environment: production
    permissions:
      contents: read
    env:
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      RPC_URL_PRIMARY:  ${{ secrets.RPC_URL_PRIMARY }}
      RPC_URL_ALCHEMY:  ${{ secrets.RPC_URL_ALCHEMY }}
      RPC_URL_INFURA:   ${{ secrets.RPC_URL_INFURA }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }
      - run: npm ci
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Verify Foundry Installation
        run: cast --version && forge --version

      - name: RPC health check
        env:
          RPC_URL: ${{ secrets.RPC_URL_PRIMARY }}
        run: |
          echo "Testing RPC connectivity..."
          if [ -z "$RPC_URL" ]; then
            echo "❌ RPC_URL_PRIMARY secret not set"
            echo "Please set RPC_URL_PRIMARY secret in repository settings"
            exit 1
          fi
          
          echo "Testing RPC: $RPC_URL"
          
          # Test RPC with curl first (more reliable than cast)
          response=$(curl -s -X POST "$RPC_URL" \
            -H "Content-Type: application/json" \
            -d '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' \
            --max-time 30 \
            --retry 3 \
            --retry-delay 2)
          
          if echo "$response" | grep -q '"result"'; then
            block_number=$(echo "$response" | jq -r '.result' 2>/dev/null || echo "unknown")
            echo "✅ RPC health check passed"
            echo "Block number: $block_number"
          else
            echo "❌ RPC health check failed"
            echo "Response: $response"
            exit 1
          fi
          
          # Also test with cast for additional verification
          export PATH="$PATH:$HOME/.foundry/bin"
          echo "Testing with cast..."
          cast rpc --rpc-url "$RPC_URL" eth_chainId
          cast rpc --rpc-url "$RPC_URL" eth_blockNumber

      - name: Chaos test (RPC failover)
        continue-on-error: true
        env:
          RPC_URL_ALCHEMY: ${{ secrets.RPC_URL_ALCHEMY }}
        run: |
          export PATH="$PATH:$HOME/.foundry/bin"
          export RPC_URL="$RPC_URL_ALCHEMY"
          cast rpc --rpc-url "$RPC_URL" eth_blockNumber
      - run: npx hardhat compile
      - run: npx hardhat test --network hardhat
      - name: Security audit
        run: |
          npm audit --omit=dev
          if [ $? -ne 0 ]; then
            echo "Security audit failed - high severity vulnerabilities found"
            exit 1
          fi
      - name: Generate SBOM
        run: |
          npm install @cyclonedx/cyclonedx-npm --no-save
          npx @cyclonedx/cyclonedx-npm --output-file sbom.json
      - name: Upload audit artifacts
        uses: actions/upload-artifact@v4
        with:
          name: audit
          path: audit/
          retention-days: 180
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
          retention-days: 180
      - name: Verify vesting (Base)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: npx hardhat run scripts/verifyAndAudit.js --network base

      - name: Discord notification (success)
        if: ${{ secrets.DISCORD_WEBHOOK_URL != '' }}
        run: |
          curl -H 'Content-Type: application/json' \
            -d "{\"content\":\"✅ CI workflow succeeded: $GITHUB_RUN_NUMBER - $GITHUB_SHA\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Slack notification (success)
        if: ${{ secrets.SLACK_WEBHOOK_URL != '' }}
        run: |
          curl -X POST -H 'Content-Type: application/json' \
            -d "{\"text\":\"✅ CI workflow succeeded: $GITHUB_RUN_NUMBER - $GITHUB_SHA\"}" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
