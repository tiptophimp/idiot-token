name: Deploy IDIOT Token Website

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug - Check secrets
      run: |
        echo "üîç Checking if secrets are configured..."
        if [ -z "${{ secrets.IDIOT_SSH_PRIVATE_KEY }}" ]; then
          echo "‚ùå ERROR: IDIOT_SSH_PRIVATE_KEY secret is not set!"
          echo "Please add it in GitHub: Settings > Secrets and variables > Actions > New repository secret"
          exit 1
        fi
        if [ -z "${{ secrets.SERVER_IP }}" ]; then
          echo "‚ùå ERROR: SERVER_IP secret is not set!"
          exit 1
        fi
        if [ -z "${{ secrets.SERVER_USER }}" ]; then
          echo "‚ùå ERROR: SERVER_USER secret is not set!"
          exit 1
        fi
        echo "‚úÖ All secrets are configured!"
        
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.IDIOT_SSH_PRIVATE_KEY }}
        
    - name: Deploy to server
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        echo "üöÄ Starting deployment to $SERVER_USER@$SERVER_IP..."
        
        # Create deployment package (exclude sensitive files)
        echo "üì¶ Creating deployment package..."
        tar -czf deployment.tar.gz \
          --exclude='.git' \
          --exclude='*.log' \
          --exclude='node_modules' \
          --exclude='secure' \
          --exclude='*.pem' \
          --exclude='*password*' \
          --exclude='*.csv' \
          --exclude='*.xlsx' \
          --exclude='audit-log.zip' \
          .
        
        echo "üì§ Uploading to server..."
        scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null deployment.tar.gz ${SERVER_USER}@${SERVER_IP}:/tmp/
        
        echo "üîß Extracting and configuring on server..."
        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SERVER_USER}@${SERVER_IP} << 'EOF'
          # Backup current website
          if [ -d "/var/www/html" ]; then
            echo "üíæ Creating backup..."
            sudo cp -r /var/www/html /var/www/html.backup.$(date +%Y%m%d_%H%M%S)
          fi
          
          # Extract new files
          echo "üìÇ Extracting files..."
          cd /var/www/html
          sudo tar -xzf /tmp/deployment.tar.gz
          
          # Create missing directories
          echo "üìÅ Creating directories..."
          sudo mkdir -p /var/www/html/assets/docs/
          sudo mkdir -p /var/www/html/docs/
          
          # Copy whitepaper if exists
          if [ -f "/var/www/html/docs/IDIOT_Whitepaper.pdf" ]; then
            echo "üìÑ Copying whitepaper..."
            sudo cp /var/www/html/docs/IDIOT_Whitepaper.pdf /var/www/html/assets/docs/IDIOT_Whitepaper_v11.pdf
          fi
          
          # Set proper permissions
          echo "üîí Setting permissions..."
          sudo chown -R www-data:www-data /var/www/html
          sudo chmod -R 755 /var/www/html
          sudo find /var/www/html -type f -exec chmod 644 {} \;
          
          # Clean up
          rm /tmp/deployment.tar.gz
          
          echo "‚úÖ Deployment completed successfully!"
        EOF
        
        # Clean up local files
        rm deployment.tar.gz
        echo "üéâ All done!"
        
    - name: Verify deployment
      run: |
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        echo "üéâ DEPLOYMENT SUCCESSFUL!"
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        echo "üåê Website: https://stupidiots.com"
        echo "üìä Contract: 0xC29EF04CFFe38012dcfc1E96a2B368443f298dE1"
        echo "üîó GitHub: https://github.com/tiptophimp/idiot-token"
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
